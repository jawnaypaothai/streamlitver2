import streamlit as st
import pandas as pd
import numpy as np
import scipy
from scipy import interpolate
from PIL import Image

st.set_page_config(page_title='‡πÅ‡∏£‡∏á‡∏•‡∏° ‡∏°‡∏¢‡∏ú',layout='wide',page_icon="üèóÔ∏è")

def img_show(name, caption='', width=True):
   image = Image.open(name)
   return st.image(image, use_column_width=width, caption=caption, )

st.write('# ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏£‡∏á‡∏•‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡πÄ‡∏ï‡∏µ‡πâ‡∏¢')
st.write('# ‡∏ï‡∏≤‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô ‡∏°‡∏¢‡∏ú.1311-50 ‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢')

inputs = st.container()
with inputs:
    st.write('### ‡∏°‡∏¥‡∏ï‡∏¥‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£')
    col1, col2, col3, col4, col5 = st.columns(5)
    with col1:
        H_roof = st.number_input(label='‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏à‡∏±‡πà‡∏ß‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤, $H_\mathrm{roof} \mathrm{~[m]}$', min_value=0.0, max_value=23.0, value=8.65, step=0.1)
        H = st.number_input(label='‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ (‡∏ä‡∏≤‡∏¢‡∏Ñ‡∏≤), $H \mathrm{~[m]}$', min_value=0.0, max_value=23.0, value=6.0, step=0.1)
        
        
    with col2:
        B = st.number_input(label='‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡∏â‡∏≤‡∏Å‡∏™‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤, $B \mathrm{~[m]}$', min_value=0.0, value=60.0, step=0.1)
        W = st.number_input(label='‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏Ç‡∏ô‡∏≤‡∏ô‡∏™‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤, $W \mathrm{~[m]}$', min_value=0.0, value=60.0, step=0.1)
        Ds = min(B,W)
        st.write(r'‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡πÅ‡∏Ñ‡∏ö‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î, $D_s = %.2f \mathrm{~m}$'%(Ds))
        
    with col1:
        slope = np.arctan((H_roof-H)/(0.5*B))*180.0/np.pi
        st.markdown(r'Roof slope, $\theta = %.2f \mathrm{~deg}$'%(slope))
        round(slope,2)
        
        
df_important = pd.DataFrame({
    '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç': ['‡∏ô‡πâ‡∏≠‡∏¢', '‡∏õ‡∏Å‡∏ï‡∏¥', '‡∏°‡∏≤‡∏Å', '‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å'],
    '‡∏™‡∏†‡∏≤‡∏ß‡∏∞‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á': [0.8, 1.0, 1.15, 1.15],
    '‡∏™‡∏†‡∏≤‡∏ß‡∏∞‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô': [0.75, 0.75, 0.75, 0.75],
})
        

df_wind_speed = pd.DataFrame({
    '‡∏Å‡∏•‡∏∏‡πà‡∏°': ['1', '2', '3', '4A', '4B'],
    'V50 [m/s]': [25, 27, 29, 25, 25],
    'T_F': [1.0, 1.0, 1.0, 1.2, 1.08],
})

col1, col2 = st.columns(2)
with col1:
    st.write('### ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡πÅ‡∏£‡∏á‡∏•‡∏°, $I$')
    col1x, col2x, col3x = st.columns(3)
    with col1x:
        important_type = st.selectbox(label='‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç', options=df_important['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç'])
    with col2x:
        cal_type = st.selectbox(label='‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö', options=['‡∏™‡∏†‡∏≤‡∏ß‡∏∞‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á', '‡∏™‡∏†‡∏≤‡∏ß‡∏∞‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'])
    with col3x:
        I = df_important.loc[df_important['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç'] == important_type, cal_type]
        st.markdown('')
        st.markdown('')
        st.markdown(r'$I = %.2f$'%(I))

    with st.expander("See table"):
        st.dataframe(df_important, hide_index=True)
        
col1, col2 = st.columns(2)
with col1:
    st.write('### ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏•‡∏°‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á, $\overline{V}$')
    col1x, col2x = st.columns(2)
    with col1x:
        area_group = st.selectbox(label='‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà', options=df_wind_speed['‡∏Å‡∏•‡∏∏‡πà‡∏°'])
    with col2x:  
        V50 = df_wind_speed.loc[df_wind_speed['‡∏Å‡∏•‡∏∏‡πà‡∏°'] == area_group, 'V50 [m/s]']
        T_F = df_wind_speed.loc[df_wind_speed['‡∏Å‡∏•‡∏∏‡πà‡∏°'] == area_group, 'T_F']
        
        if cal_type == '‡∏™‡∏†‡∏≤‡∏ß‡∏∞‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á':
            v = V50*T_F
            st.markdown(r'$v_{50} = %.2f \mathrm{~m/s,} \quad T_F = %.2f$'%(V50, T_F))
            st.markdown(r'$\overline{V} = V_{50} T_F = %.2f \times %.2f = %.2f \mathrm{~m/s}$'%(V50, T_F, v))
        else:
            v = V50
            st.markdown(r'$V_{50} = %.2f \mathrm{~m/s}$'%(V50))
            st.markdown(r'$\overline{V} = V_{50} T_F = %.2f \mathrm{~m/s}$'%(v))
            
            
    
    with st.expander("See table"):
        st.dataframe(df_wind_speed, hide_index=True)
        
col1, col2 = st.columns(2)
with col1:
    st.write('### ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÅ‡∏£‡∏á‡∏•‡∏°‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á, $q$')
    rho = 1.25
    g = 9.81
    q = 0.5*rho*g*(v**2)
    st.write(q)
    st.markdown(r'‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏°‡∏ß‡∏•‡∏≠‡∏≤‡∏Å‡∏≤‡∏®, $\rho \approx 1.25 \mathrm{~kg/m^3}$')
    st.markdown(r'‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏£‡πà‡∏á‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏£‡∏á‡πÇ‡∏ô‡πâ‡∏°‡∏ñ‡πà‡∏ß‡∏á‡∏Ç‡∏≠‡∏á‡πÇ‡∏•‡∏Å, $g = 9.81 \mathrm{~m/s^2}$')
    st.markdown(r'$q = \frac{1}{2} \left( \frac{\rho}{g} \right) \overline{V}^{2} = \frac{1}{2} \left( \frac{%.2f \mathrm{~kg/m^3}}{%.2f \mathrm{~m/s^2}} \right) \left( %.2f \mathrm{~m/s} \right)^{2} = %.2f \mathrm{~kg/m^2}$'%(rho,g,v,q))

st.markdown(r'### ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏†‡∏≤‡∏û‡∏†‡∏π‡∏°‡∏¥‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®, $C_e$')

# z = st.number_input(label='‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏à‡∏≤‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏î‡∏¥‡∏ô, $z \mathrm{~[m]}$', min_value=0.0, max_value=80.0, value=5.0, step=0.5)

if slope < 7:
    st.markdown(r'‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏ô**‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 7 ‡∏≠‡∏á‡∏®‡∏≤**, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á, $h$, ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏ä‡∏≤‡∏¢‡∏Ñ‡∏≤, $H$, ‡πÅ‡∏ó‡∏ô‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÑ‡∏°‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 6 ‡πÄ‡∏°‡∏ï‡∏£')
    h_ = H
    h = max(h_,6.0)
    st.markdown(r'$\qquad$ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á, $\quad h = \max \left( H, 6.0 \mathrm{~m}  \right) = \max \left(%.2f \mathrm{~m}, 6.0 \mathrm{~m} \right) = %.2f \mathrm{~m}$'%(h_,h))
    
    z = h
    st.markdown(r'‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏£‡∏á‡∏•‡∏°‡∏à‡∏≤‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏î‡∏¥‡∏ô, $z = h = %.2f \mathrm{~m}$'%(z))
    
else:
    st.markdown(r'‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏ô**‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 7 ‡∏≠‡∏á‡∏®‡∏≤**, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á, $h$, ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Ç‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤ ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÑ‡∏°‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 6 ‡πÄ‡∏°‡∏ï‡∏£')
    h_ = 0.5*(H_roof+H)
    h = max(h_,6.0)
    st.markdown(r'$\qquad$ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Ç‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤, $\quad H_\mathrm{avg} = 0.5 \left( H_\mathrm{roof} + H \right) = 0.5 \left( %.2f \mathrm{~m} + %.2f \mathrm{~m} \right) = %.2f \mathrm{~m}$'%(H_roof,H,h_))
    st.markdown(r'$\qquad$ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á, $\quad h = \max \left( H_\mathrm{avg}, 6.0 \mathrm{~m}  \right) = \max \left(%.2f \mathrm{~m}, 6.0 \mathrm{~m} \right) = %.2f \mathrm{~m}$'%(h_,h))
    
    z = h
    st.markdown(r'‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏£‡∏á‡∏•‡∏°‡∏à‡∏≤‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏î‡∏¥‡∏ô, $z = h = %.2f \mathrm{~m}$'%(z))
    
    
    
col1, buff, buff, buff, buff = st.columns(5)
with col1:
    land_type = st.selectbox(label='‡∏™‡∏†‡∏≤‡∏û‡∏†‡∏π‡∏°‡∏¥‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®', options=['‡πÅ‡∏ö‡∏ö A', '‡πÅ‡∏ö‡∏ö B'])
    
if land_type == '‡πÅ‡∏ö‡∏ö A':
    Ce = (z/10)**0.2
    st.markdown(r'$C_e = \left( \frac{z}{10} \right) ^{0.2} \ge 0.9$')
    st.markdown(r'$\quad\>\> = \left( \frac{%.2f}{10} \right) ^{0.2}$'%(z))
    st.markdown(r'$\quad\>\> = %.2f \ge 0.9$'%(Ce))
    Ce = max(Ce, 0.9)
    st.markdown(r'$\quad\>\> = %.2f$'%(Ce))
    
else:
    Ce_ = 0.7*(z/12)**0.3
    Ce = max(Ce_, 0.7)
    st.markdown(r'''$
                \begin{aligned}
                C_e &= 0.7 \left( \frac{z}{12} \right) ^{0.3} \ge 0.7 \\
                &= 0.7 \left( \frac{%.2f}{12} \right) ^{0.3} \\
                &= %.2f \ge 0.7 \\
                &= %.2f  \\
                \end{aligned}
                $'''%(z,Ce_,Ce))


st.markdown(r'### ‡∏Ñ‡πà‡∏≤‡∏™‡∏±‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÅ‡∏£‡∏á‡∏•‡∏°‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å, $C_p C_g$')


df_case1 = pd.DataFrame({
    'Slope min [deg]': [0, 20, 30, 90],
    'Slope max [deg]': [5, 20, 45, 90],
    '1': [0.75, 1.0, 1.05, 1.05],
    '1E': [1.15, 1.5, 1.3, 1.3],
    '2': [-1.3, -1.3, 0.4, 1.05],
    '2E': [-2.0, -2.0, 0.5, 1.3],
    '3': [-0.7, -0.9, -0.8, -0.7],
    '3E': [-1.0, -1.3, -1.0, -0.9],
    '4': [-0.55, -0.8, -0.7, -0.7],
    '4E': [-0.8, -1.2, -0.9, -0.9],
})

df_case2 = pd.DataFrame({
    'Slope min [deg]': [0],
    'Slope max [deg]': [90],
    '1': [-0.85],
    '1E': [-0.9],
    '2': [-1.3],
    '2E': [-2.0],
    '3': [-0.7],
    '3E': [-1.0],
    '4': [-0.85],
    '4E': [-0.9],
    '5': [0.75],
    '5E': [1.15],
    '6': [-0.55],
    '6E': [-0.8],
})






zone_list = df_case1.columns
zone_list = ['Slope [deg]'] + zone_list[2:].to_list()

def interpolate_y(index):
    x_data = [float(df_case1['Slope max [deg]'][index]), float(df_case1['Slope min [deg]'][index+1])]
    aa = df_case1.iloc[index,2:].to_list()
    bb = df_case1.iloc[index+1,2:].to_list()
    y_all = zip(aa, bb)
    
    y_interpolate = []
    for y_data in y_all:
        f = interpolate.interp1d(x_data, y_data)
        y_interpolate.append(round(f([slope])[0],2))

    df = pd.DataFrame(data=[round(slope,2)] + y_interpolate)
    df = df.T
    df.columns = zone_list
    
    return df

if slope > 5.0 and slope < 20.0:
    df_CpCg = interpolate_y(0)
elif slope > 20.0 and slope < 30.0:
    df_CpCg = interpolate_y(1)
elif slope > 45.0 and slope < 90.0:
    df_CpCg = interpolate_y(2)
elif slope >= 0.0 and slope <= 5.0:
    df_CpCg = pd.DataFrame(data=[round(slope,2)] + df_case1.iloc[0,2:].to_list())
    df_CpCg = df_CpCg.T
    df_CpCg.columns = zone_list
elif slope == 20.0:
    df_CpCg = pd.DataFrame(data=[round(slope,2)] + df_case1.iloc[1,2:].to_list())
    df_CpCg = df_CpCg.T
    df_CpCg.columns = zone_list
elif slope >= 30.0 and slope <= 45.0:
    df_CpCg = pd.DataFrame(data=[round(slope,2)] + df_case1.iloc[2,2:].to_list())
    df_CpCg = df_CpCg.T
    df_CpCg.columns = zone_list
elif slope == 90.0:
    df_CpCg = pd.DataFrame(data=[round(slope,2)] + df_case1.iloc[3,2:].to_list())
    df_CpCg = df_CpCg.T
    df_CpCg.columns = zone_list


col1, col2 = st.columns([0.6,0.4])
with col1:
    st.markdown('**‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà 1:** ‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏•‡∏°‡πÇ‡∏î‡∏¢‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß**‡∏ï‡∏±‡πâ‡∏á‡∏â‡∏≤‡∏Å**‡∏Å‡∏±‡∏ö‡∏™‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤')
    col1x, buff = st.columns([0.5,0.5])
    with col1x:
        img_show('CpCg_case1.png')
        
    st.dataframe(df_CpCg, hide_index=True, use_container_width=True)
    with st.expander('See table'):
        st.dataframe(df_case1, hide_index=True, use_container_width=True)
    
col1, col2 = st.columns([0.6,0.4])
with col1:
    st.markdown('**‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà 2:** ‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏•‡∏°‡πÇ‡∏î‡∏¢‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß**‡∏Ç‡∏ô‡∏≤‡∏ô**‡∏Å‡∏±‡∏ö‡∏™‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤')
    col1x, buff = st.columns([0.5,0.5])
    with col1x:
        img_show('CpCg_case2.png')
    with st.expander('See table'):
        st.dataframe(df_case2, hide_index=True, use_container_width=True)
    
st.markdown(r'### ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏£‡∏á‡∏•‡∏°')
with st.expander('information'):
    I= st.number_input(label='I',min_value=0.75,max_value=1.15, step=0.1)
    g = st.number_input(label='q',min_value=0.0,max_value=1000000.00,step=0.1)
    Cpi1 = st.number_input(label='cpi+',min_value=-2.0,max_value=5.0, step=0.1)
    Cpi2= st.number_input(label='cpi-',min_value=-2.0,max_value=5.0, step=0.1)
st.markdown(r' **‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏£‡∏á‡∏•‡∏°‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£**')

col1, col2 = st.columns([0.5,0.5])
with col1:
    st.markdown('calculation case1')
with col2:
    with st.expander('### ‡πÅ‡∏£‡∏á‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ï‡∏±‡πâ‡∏á‡∏â‡∏≤‡∏Å'):
        st.markdown('### case1 ‡∏ï‡∏±‡πâ‡∏á‡∏â‡∏≤‡∏Å')
      
      
        P =   float(I) * float(q) * df_CpCg.loc[[0],['1','1E','2','2E','3','3E','4','4E',]] * Ce
        st.write('pnet','=',P)
     
        
    df_Pw = pd.DataFrame() 
col1, col2 = st.columns([0.5,0.5])
with col1:  
        st.markdown('calculation case2')
with col2:
    with st.expander('### ‡πÅ‡∏£‡∏á‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏Ç‡∏ô‡∏≤‡∏ô'):
        st.markdown('### case2 ‡∏Ç‡∏ô‡∏≤‡∏ô')
   
      
        P1 = float(I) *float(q) * df_case2.loc[[0],['1','1E','2','2E','3','3E','4','4E','5','5E','6','6E']] * Ce
        st.write('pNet','=',P1)
    df_Pw = pd.DataFrame() 


st.markdown(r'**‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏£‡∏á‡∏•‡∏°‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£**')
col1, col2 = st.columns([0.5,0.5])
with col1:
    st.markdown('calculation ‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡∏â‡∏≤‡∏Å')
with col2:
    with st.expander('‡πÅ‡∏£‡∏á‡∏•‡∏°‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏ß‡∏Å'):
        st.markdown('### case1 ‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏ß‡∏Å')
        P2 = float(I) *float(q) *(df_CpCg.loc[[0],['1','1E','2','2E','3','3E','4','4E',]]-(2*Cpi1)) * Ce
        st.write('pNet','=',P2)
    with st.expander('‡πÅ‡∏£‡∏á‡∏•‡∏°‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏ö'):
        st.markdown('### case1 ‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏ö')
        P6 = float(I) * float(q)*(df_CpCg.loc[[0],['1','1E','2','2E','3','3E','4','4E']]-(2*Cpi2)) * Ce
        st.write('Pnet','=',P6)   
    df_Pw = pd.DataFrame() 

col1, col2 = st.columns([0.5,0.5])
with col1:
    st.markdown('calculation ‡πÅ‡∏ô‡∏ß‡∏Ç‡∏ô‡∏≤‡∏ô')
with col2:
    with st.expander('‡πÅ‡∏£‡∏á‡∏•‡∏°‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏ß‡∏Å'):
        st.markdown('### case2 ‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏ß‡∏Å')
        
        
    
        P3 = float(I)* float(q)* (df_case2.loc[[0],['1','1E','2','2E','3','3E','4','4E','5','5E','6','6E',]]-(2*Cpi1))  * Ce
        st.write('pNet','=',P3)
    
    with st.expander('‡πÅ‡∏£‡∏á‡∏•‡∏°‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏ö'):
        st.markdown('### case2 ‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏ö')
       
        P5 = float(I) *   float(q)*(df_case2.loc[[0],['1','1E','2','2E','3','3E','4','4E','5','5E','6','6E']]-(2*Cpi2)) * Ce
        st.write('pNet','=',P5)
        df_Pw = pd.DataFrame() 
